# Edit this file to customize for your system.

# if SUIFHOME environment for SUIF 1.x exists, build for it!
ifneq ($(strip $(wildcard $(SUIFHOME))),)
BUILD_SUIF = true
else
BUILD_SUIF = false
endif

# Compiler selection.
# Remove -g if your compiler doesn't support -O and -g together
# OPTIMIZATION_CFLAGS = -O2
OPTIMIZATION_CFLAGS = -g

# g++ 2.95 3.x 4.x tested on debian linux
# can't set to gcc due to .c suffix
CC = g++      
# CC = icc -Kc++ 
COMPILER_CFLAGS = -Wall -Wno-unused -DSIG_HANDLER_HAS_ONE_ARG=1 -DSIG_RETURNS_SIG_ERR=1 -DSHUT_UP_ABOUT_STATEMENT_WITH_NO_EFFECT_IN_DYNAMIC_ARRAY_CREATION
DEPENDENCE_CFLAGS = -M

# g++  2.95 (tested w/ gcc version 2.95.2 19991024 (release) on SuSE linux 6.4)
# CC = g++
# COMPILER_CFLAGS=-Wall -DSIG_HANDLER_HAS_ONE_ARG=1 -DSHUT_UP_ABOUT_STATEMENT_WITH_NO_EFFECT_IN_DYNAMIC_ARRAY_CREATION
# ALSO USE THESE FLAGS FOR DOING TIMING AS IN DAVEW'S THESIS:
# -DSPEED -DNDEBUG -Ddont_verify_kills=1 -DDAVEW_THESIS_REDUCTIONS
#
# If there's no motif library, use  -DBATCH_ONLY_PETIT and change XFF_LIBS flags
# To use kill equation everywhere with no covers:
# -Ddont_use_cover_analysis=1 -Dkill_with_some_obvious_constraints=1
# To run as fast as possible, add this too:
# -DSPEED -DNDEBUG
# This flag still checks for multiplication overflow even when -DNDEBUG is on:
# -DSTILL_CHECK_MULT=1
#
# These may not work:
# -DmaxmaxGEQs=32768
# -DLONG_LONG_COEF=1

# egcs-1.1.2 (and g++ 2.8?)
# CC = g++
# COMPILER_CFLAGS=-Wall -DSIG_HANDLER_HAS_ONE_ARG=1 -DDONT_INCLUDE_TEMPLATE_CODE -fno-implicit-templates
# PT_OBJ=PT.o

# For Sun CC (SunPro C++ 3.0.1) works as of release 1.01
# CC = CC
# COLLECT_SB_INFO = -sb    # signal compiler to collect source browser info
# TEMPLATE_DB=$(BASEDIR)   # location for SunPro CC template DB
# COMPILER_CFLAGS = $(COLLECT_SB_INFO) -ptr$(TEMPLATE_DB) -DINITIALIZE_TEMPLATIZED_STATICS
# PT_OBJ=

# add objects to target archive; use first version unless using SunPro CC
AR_COMMAND = $(AR) r $(TARGET) $(OBJS) # for all except SunPro CC 
# AR_COMMAND = $(CC) $(CFLAGS) $(LDFLAGS) -xar $(OBJS) -o $(TARGET)

# OS Flags: Set these for your OS, either BSD-style or SYSV-style.
# BSD-style (SunOS 4.1.x, may work for others.)
OS_CFLAGS=
OS_INCL_PATH=
OS_LIB_PATH=
OS_LIBS=
RANLIB=ranlib
# SYSV style (Solaris 2.x, may work for others -- Solaris doesn't define SYSV)
#OS_CFLAGS=-DOMIT_GETRUSAGE -DSYSV -DSVR4 $(X11_LIB_PATH:-L%=-R%)
#OS_INCL_PATH=
#OS_LIB_PATH=
#OS_LIBS=-lgen -lsocket
#RANLIB=echo
# end of OS selection

# Where things should be installed:
DESTDIR=/usr/local
INCL_DESTDIR=$(DESTDIR)/include/omega
LIB_DESTDIR=$(DESTDIR)/lib
BIN_DESTDIR=$(DESTDIR)/bin

# This is only used if you modify the grammar file.  Use bison if you have it.
RUMINANT=bison -y
FLEX=flex
LEX=$(FLEX)

# Set these if you have any other things to include.
# Each of these variables can have a list of directories/libs.
EXTRA_INCL_PATH=
EXTRA_LIB_PATH=
EXTRA_LIBS=

# That should be all...these should be OK for all systems.
SHELL=/bin/sh
RM=/bin/rm
CP=/bin/cp
AR=ar

# DO NOT CHANGE
OMEGA_BUILD_DATE = $(shell date +%m/%d/%Y)
