 void zuker_pluto2a(){
/* We do not support C11 <threads.h>.  */
  int t1, t2, t3, t4, t5, t6, t7;
 int lb, ub, lbp, ubp, lb2, ub2;
 register int lbv, ubv;
/* Start of CLooG code */
if (N >= 2) {
  for (t1=max(-1,ceild(-N-13,16));t1<=floord(N-1,16);t1++) {
    lbp=max(ceild(-N-13,16),ceild(16*t1-N+1,16));
    ubp=min(0,t1);
#pragma omp parallel for private(lbv,ubv,t3,t4,t5,t6,t7)
    for (t2=lbp;t2<=ubp;t2++) {
      if (t1 == -1) {
        V[(-16*t2-15)][(-16*t2-14)] = MIN( MIN (V[(-16*t2-15)+1][(-16*t2-14)-1], EHF[(-16*t2-15)][(-16*t2-14)]), V[(-16*t2-15)][(-16*t2-14)]);;
        W[(-16*t2-15)][(-16*t2-14)] = MIN( MIN ( MIN ( W[(-16*t2-15)+1][(-16*t2-14)], W[(-16*t2-15)][(-16*t2-14)-1]), V[(-16*t2-15)][(-16*t2-14)]), W[(-16*t2-15)][(-16*t2-14)]);;
      }
      if ((t1 == 0) && (t2 == 0)) {
        V[0][1] = MIN( MIN (V[0 +1][1 -1], EHF[0][1]), V[0][1]);;
        W[0][1] = MIN( MIN ( MIN ( W[0 +1][1], W[0][1 -1]), V[0][1]), W[0][1]);;
      }
      if ((t1 == -1) && (t2 <= -2) && (t2 >= ceild(-N-12,16))) {
        V[(-16*t2-14)][(-16*t2-13)] = MIN( MIN (V[(-16*t2-14)+1][(-16*t2-13)-1], EHF[(-16*t2-14)][(-16*t2-13)]), V[(-16*t2-14)][(-16*t2-13)]);;
        W[(-16*t2-14)][(-16*t2-13)] = MIN( MIN ( MIN ( W[(-16*t2-14)+1][(-16*t2-13)], W[(-16*t2-14)][(-16*t2-13)-1]), V[(-16*t2-14)][(-16*t2-13)]), W[(-16*t2-14)][(-16*t2-13)]);;
        W[(-16*t2-15)][(-16*t2-13)] = MIN ( MIN(W[(-16*t2-15)][(-16*t2-14)], W[(-16*t2-14)+1][(-16*t2-13)]), W[(-16*t2-15)][(-16*t2-13)]);;
        V[(-16*t2-15)][(-16*t2-13)] = MIN( MIN (V[(-16*t2-15)+1][(-16*t2-13)-1], EHF[(-16*t2-15)][(-16*t2-13)]), V[(-16*t2-15)][(-16*t2-13)]);;
        W[(-16*t2-15)][(-16*t2-13)] = MIN( MIN ( MIN ( W[(-16*t2-15)+1][(-16*t2-13)], W[(-16*t2-15)][(-16*t2-13)-1]), V[(-16*t2-15)][(-16*t2-13)]), W[(-16*t2-15)][(-16*t2-13)]);;
      }
      if ((N >= 4) && (t1 == -1) && (t2 == -1)) {
        V[2][3] = MIN( MIN (V[2 +1][3 -1], EHF[2][3]), V[2][3]);;
        W[2][3] = MIN( MIN ( MIN ( W[2 +1][3], W[2][3 -1]), V[2][3]), W[2][3]);;
        W[1][3] = MIN ( MIN(W[1][2], W[2 +1][3]), W[1][3]);;
        V[1][3] = MIN( MIN (V[1 +1][3 -1], EHF[1][3]), V[1][3]);;
        W[1][3] = MIN( MIN ( MIN ( W[1 +1][3], W[1][3 -1]), V[1][3]), W[1][3]);;
      }
      if ((N >= 3) && (t1 == 0) && (t2 == 0)) {
        W[0][2] = MIN ( MIN(W[0][1], W[1 +1][2]), W[0][2]);;
        V[0][2] = MIN( MIN (V[0 +1][2 -1], EHF[0][2]), V[0][2]);;
        W[0][2] = MIN( MIN ( MIN ( W[0 +1][2], W[0][2 -1]), V[0][2]), W[0][2]);;
      }
      if ((t1 == -1) && (t2 >= ceild(-N-11,16))) {
        V[(-16*t2-13)][(-16*t2-12)] = MIN( MIN (V[(-16*t2-13)+1][(-16*t2-12)-1], EHF[(-16*t2-13)][(-16*t2-12)]), V[(-16*t2-13)][(-16*t2-12)]);;
        W[(-16*t2-13)][(-16*t2-12)] = MIN( MIN ( MIN ( W[(-16*t2-13)+1][(-16*t2-12)], W[(-16*t2-13)][(-16*t2-12)-1]), V[(-16*t2-13)][(-16*t2-12)]), W[(-16*t2-13)][(-16*t2-12)]);;
        W[(-16*t2-14)][(-16*t2-12)] = MIN ( MIN(W[(-16*t2-14)][(-16*t2-13)], W[(-16*t2-13)+1][(-16*t2-12)]), W[(-16*t2-14)][(-16*t2-12)]);;
        V[(-16*t2-14)][(-16*t2-12)] = MIN( MIN (V[(-16*t2-14)+1][(-16*t2-12)-1], EHF[(-16*t2-14)][(-16*t2-12)]), V[(-16*t2-14)][(-16*t2-12)]);;
        W[(-16*t2-14)][(-16*t2-12)] = MIN( MIN ( MIN ( W[(-16*t2-14)+1][(-16*t2-12)], W[(-16*t2-14)][(-16*t2-12)-1]), V[(-16*t2-14)][(-16*t2-12)]), W[(-16*t2-14)][(-16*t2-12)]);;
        W[(-16*t2-15)][(-16*t2-12)] = MIN ( MIN(W[(-16*t2-15)][(-16*t2-14)], W[(-16*t2-14)+1][(-16*t2-12)]), W[(-16*t2-15)][(-16*t2-12)]);;
        V[(-16*t2-15)][(-16*t2-12)] = MIN(W[(-16*t2-15)+1][(-16*t2-14)] + W[(-16*t2-14)+1][(-16*t2-12)-1], V[(-16*t2-15)][(-16*t2-12)]);;
        W[(-16*t2-15)][(-16*t2-12)] = MIN ( MIN(W[(-16*t2-15)][(-16*t2-13)], W[(-16*t2-13)+1][(-16*t2-12)]), W[(-16*t2-15)][(-16*t2-12)]);;
        V[(-16*t2-15)][(-16*t2-12)] = MIN( MIN (V[(-16*t2-15)+1][(-16*t2-12)-1], EHF[(-16*t2-15)][(-16*t2-12)]), V[(-16*t2-15)][(-16*t2-12)]);;
        W[(-16*t2-15)][(-16*t2-12)] = MIN( MIN ( MIN ( W[(-16*t2-15)+1][(-16*t2-12)], W[(-16*t2-15)][(-16*t2-12)-1]), V[(-16*t2-15)][(-16*t2-12)]), W[(-16*t2-15)][(-16*t2-12)]);;
      }
      if ((N >= 4) && (t1 == 0) && (t2 == 0)) {
        W[0][3] = MIN ( MIN(W[0][1], W[1 +1][3]), W[0][3]);;
        V[0][3] = MIN(W[0 +1][1] + W[1 +1][3 -1], V[0][3]);;
        W[0][3] = MIN ( MIN(W[0][2], W[2 +1][3]), W[0][3]);;
        V[0][3] = MIN( MIN (V[0 +1][3 -1], EHF[0][3]), V[0][3]);;
        W[0][3] = MIN( MIN ( MIN ( W[0 +1][3], W[0][3 -1]), V[0][3]), W[0][3]);;
      }
      for (t3=max(max(4,16*t1-16*t2),-16*t2-11);t3<=min(min(N-1,-16*t2+1),16*t1-16*t2+15);t3++) {
        V[(t3-1)][t3] = MIN( MIN (V[(t3-1)+1][t3-1], EHF[(t3-1)][t3]), V[(t3-1)][t3]);;
        W[(t3-1)][t3] = MIN( MIN ( MIN ( W[(t3-1)+1][t3], W[(t3-1)][t3-1]), V[(t3-1)][t3]), W[(t3-1)][t3]);;
        W[(t3-2)][t3] = MIN ( MIN(W[(t3-2)][(t3-1)], W[(t3-1)+1][t3]), W[(t3-2)][t3]);;
        V[(t3-2)][t3] = MIN( MIN (V[(t3-2)+1][t3-1], EHF[(t3-2)][t3]), V[(t3-2)][t3]);;
        W[(t3-2)][t3] = MIN( MIN ( MIN ( W[(t3-2)+1][t3], W[(t3-2)][t3-1]), V[(t3-2)][t3]), W[(t3-2)][t3]);;
        W[(t3-3)][t3] = MIN ( MIN(W[(t3-3)][(t3-2)], W[(t3-2)+1][t3]), W[(t3-3)][t3]);;
        V[(t3-3)][t3] = MIN(W[(t3-3)+1][(t3-2)] + W[(t3-2)+1][t3-1], V[(t3-3)][t3]);;
        W[(t3-3)][t3] = MIN ( MIN(W[(t3-3)][(t3-1)], W[(t3-1)+1][t3]), W[(t3-3)][t3]);;
        V[(t3-3)][t3] = MIN( MIN (V[(t3-3)+1][t3-1], EHF[(t3-3)][t3]), V[(t3-3)][t3]);;
        W[(t3-3)][t3] = MIN( MIN ( MIN ( W[(t3-3)+1][t3], W[(t3-3)][t3-1]), V[(t3-3)][t3]), W[(t3-3)][t3]);;
        for (t4=-t3+4;t4<=16*t2+15;t4++) {
          for (t5=-t4+1;t5<=t3-2;t5++) {
            W[-t4][t3] = MIN ( MIN(W[-t4][t5], W[t5+1][t3]), W[-t4][t3]);;
            for (t6=t5+1;t6<=min(t3-1,t3+t4+t5-3);t6++) {
              V[-t4][t3] = MIN(V[t5][t6] + EFL[-t4][t3], V[-t4][t3]);;
            }
            V[-t4][t3] = MIN(W[-t4+1][t5] + W[t5+1][t3-1], V[-t4][t3]);;
          }
          W[-t4][t3] = MIN ( MIN(W[-t4][(t3-1)], W[(t3-1)+1][t3]), W[-t4][t3]);;
          V[-t4][t3] = MIN( MIN (V[-t4+1][t3-1], EHF[-t4][t3]), V[-t4][t3]);;
          W[-t4][t3] = MIN( MIN ( MIN ( W[-t4+1][t3], W[-t4][t3-1]), V[-t4][t3]), W[-t4][t3]);;
        }
      }
      if ((t1 == 0) && (t2 <= -1) && (t2 >= ceild(-N+3,16))) {
        W[-16*t2][(-16*t2+2)] = MIN ( MIN(W[-16*t2][(-16*t2+1)], W[(-16*t2+1)+1][(-16*t2+2)]), W[-16*t2][(-16*t2+2)]);;
        V[-16*t2][(-16*t2+2)] = MIN( MIN (V[-16*t2+1][(-16*t2+2)-1], EHF[-16*t2][(-16*t2+2)]), V[-16*t2][(-16*t2+2)]);;
        W[-16*t2][(-16*t2+2)] = MIN( MIN ( MIN ( W[-16*t2+1][(-16*t2+2)], W[-16*t2][(-16*t2+2)-1]), V[-16*t2][(-16*t2+2)]), W[-16*t2][(-16*t2+2)]);;
        W[(-16*t2-1)][(-16*t2+2)] = MIN ( MIN(W[(-16*t2-1)][-16*t2], W[-16*t2+1][(-16*t2+2)]), W[(-16*t2-1)][(-16*t2+2)]);;
        V[(-16*t2-1)][(-16*t2+2)] = MIN(W[(-16*t2-1)+1][-16*t2] + W[-16*t2+1][(-16*t2+2)-1], V[(-16*t2-1)][(-16*t2+2)]);;
        W[(-16*t2-1)][(-16*t2+2)] = MIN ( MIN(W[(-16*t2-1)][(-16*t2+1)], W[(-16*t2+1)+1][(-16*t2+2)]), W[(-16*t2-1)][(-16*t2+2)]);;
        V[(-16*t2-1)][(-16*t2+2)] = MIN( MIN (V[(-16*t2-1)+1][(-16*t2+2)-1], EHF[(-16*t2-1)][(-16*t2+2)]), V[(-16*t2-1)][(-16*t2+2)]);;
        W[(-16*t2-1)][(-16*t2+2)] = MIN( MIN ( MIN ( W[(-16*t2-1)+1][(-16*t2+2)], W[(-16*t2-1)][(-16*t2+2)-1]), V[(-16*t2-1)][(-16*t2+2)]), W[(-16*t2-1)][(-16*t2+2)]);;
        for (t4=16*t2+2;t4<=16*t2+15;t4++) {
          for (t5=-t4+1;t5<=-16*t2;t5++) {
            W[-t4][(-16*t2+2)] = MIN ( MIN(W[-t4][t5], W[t5+1][(-16*t2+2)]), W[-t4][(-16*t2+2)]);;
            for (t6=t5+1;t6<=min(-16*t2+1,-16*t2+t4+t5-1);t6++) {
              V[-t4][(-16*t2+2)] = MIN(V[t5][t6] + EFL[-t4][(-16*t2+2)], V[-t4][(-16*t2+2)]);;
            }
            V[-t4][(-16*t2+2)] = MIN(W[-t4+1][t5] + W[t5+1][(-16*t2+2)-1], V[-t4][(-16*t2+2)]);;
          }
          W[-t4][(-16*t2+2)] = MIN ( MIN(W[-t4][(-16*t2+1)], W[(-16*t2+1)+1][(-16*t2+2)]), W[-t4][(-16*t2+2)]);;
          V[-t4][(-16*t2+2)] = MIN( MIN (V[-t4+1][(-16*t2+2)-1], EHF[-t4][(-16*t2+2)]), V[-t4][(-16*t2+2)]);;
          W[-t4][(-16*t2+2)] = MIN( MIN ( MIN ( W[-t4+1][(-16*t2+2)], W[-t4][(-16*t2+2)-1]), V[-t4][(-16*t2+2)]), W[-t4][(-16*t2+2)]);;
        }
      }
      if ((t1 == 0) && (t2 <= -1) && (t2 >= ceild(-N+4,16))) {
        W[-16*t2][(-16*t2+3)] = MIN ( MIN(W[-16*t2][(-16*t2+1)], W[(-16*t2+1)+1][(-16*t2+3)]), W[-16*t2][(-16*t2+3)]);;
        V[-16*t2][(-16*t2+3)] = MIN(W[-16*t2+1][(-16*t2+1)] + W[(-16*t2+1)+1][(-16*t2+3)-1], V[-16*t2][(-16*t2+3)]);;
        W[-16*t2][(-16*t2+3)] = MIN ( MIN(W[-16*t2][(-16*t2+2)], W[(-16*t2+2)+1][(-16*t2+3)]), W[-16*t2][(-16*t2+3)]);;
        V[-16*t2][(-16*t2+3)] = MIN( MIN (V[-16*t2+1][(-16*t2+3)-1], EHF[-16*t2][(-16*t2+3)]), V[-16*t2][(-16*t2+3)]);;
        W[-16*t2][(-16*t2+3)] = MIN( MIN ( MIN ( W[-16*t2+1][(-16*t2+3)], W[-16*t2][(-16*t2+3)-1]), V[-16*t2][(-16*t2+3)]), W[-16*t2][(-16*t2+3)]);;
        for (t4=16*t2+1;t4<=16*t2+15;t4++) {
          for (t5=-t4+1;t5<=-16*t2+1;t5++) {
            W[-t4][(-16*t2+3)] = MIN ( MIN(W[-t4][t5], W[t5+1][(-16*t2+3)]), W[-t4][(-16*t2+3)]);;
            for (t6=t5+1;t6<=min(-16*t2+2,-16*t2+t4+t5);t6++) {
              V[-t4][(-16*t2+3)] = MIN(V[t5][t6] + EFL[-t4][(-16*t2+3)], V[-t4][(-16*t2+3)]);;
            }
            V[-t4][(-16*t2+3)] = MIN(W[-t4+1][t5] + W[t5+1][(-16*t2+3)-1], V[-t4][(-16*t2+3)]);;
          }
          W[-t4][(-16*t2+3)] = MIN ( MIN(W[-t4][(-16*t2+2)], W[(-16*t2+2)+1][(-16*t2+3)]), W[-t4][(-16*t2+3)]);;
          V[-t4][(-16*t2+3)] = MIN( MIN (V[-t4+1][(-16*t2+3)-1], EHF[-t4][(-16*t2+3)]), V[-t4][(-16*t2+3)]);;
          W[-t4][(-16*t2+3)] = MIN( MIN ( MIN ( W[-t4+1][(-16*t2+3)], W[-t4][(-16*t2+3)-1]), V[-t4][(-16*t2+3)]), W[-t4][(-16*t2+3)]);;
        }
      }
      for (t3=max(16*t1-16*t2,-16*t2+4);t3<=min(N-1,16*t1-16*t2+15);t3++) {
        for (t4=16*t2;t4<=min(0,16*t2+15);t4++) {
          for (t5=-t4+1;t5<=t3-2;t5++) {
            W[-t4][t3] = MIN ( MIN(W[-t4][t5], W[t5+1][t3]), W[-t4][t3]);;
            for (t6=t5+1;t6<=min(t3-1,t3+t4+t5-3);t6++) {
              V[-t4][t3] = MIN(V[t5][t6] + EFL[-t4][t3], V[-t4][t3]);;
            }
            V[-t4][t3] = MIN(W[-t4+1][t5] + W[t5+1][t3-1], V[-t4][t3]);;
          }
          W[-t4][t3] = MIN ( MIN(W[-t4][(t3-1)], W[(t3-1)+1][t3]), W[-t4][t3]);;
          V[-t4][t3] = MIN( MIN (V[-t4+1][t3-1], EHF[-t4][t3]), V[-t4][t3]);;
          W[-t4][t3] = MIN( MIN ( MIN ( W[-t4+1][t3], W[-t4][t3-1]), V[-t4][t3]), W[-t4][t3]);;
        }
      }
    }
  }
}
/* End of CLooG code */
}
