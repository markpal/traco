{ "Entry", Onone, 0, "Entry", "program" },
{ "Exit", Onone, 0, "Exit", "end" },
{ "do, %", Ovalue, 0, "for", "do" },
{ "forall, %", Ovalue, 0, "forall", "do" },
{ "doall, %", Ovalue, 0, "doall", "do" },
{ "doany, %", Ovalue, 0, "doany", "do" },
{ "dolimit", Osymbol, 0, "", "" },
{ "declare", Osymbol, 0, "", "" },
{ "bounds", Onone, 0, ":", ":" },
{ "if", Onone, 0, "if", "if" },
{ "then", Onone, 0, "then", "then" },
{ "else", Onone, 0, "else", "else" },
{ "constant", Ovalue, 90, "", "" },
{ "real", Osymbol, 90, "", "" },
{ "index", Onodesym, 90, "", "" },
{ "fetch", Onodesym, 90, "", "" },
{ "store", Onodesym, 90, "", "" },
{ "update", Onodesym, 90, "", "" },
{ "fetch_array", Onodesym, 90, "", "" },
{ "store_array", Onodesym, 90, "", "" },
{ "update_array", Onodesym, 90, "", "" },
{ "call", Onodesym, 90, "", "" },
{ "rand", Onodesym, 90, "rand", "rand" },
{ "add", Onone, 50, "+", "+" },
{ "sub", Onone, 50, "-", "-" },
{ "mpy", Onone, 60, "*", "*" },
{ "div", Onone, 70, "/", "/" },
{ "floor_fivide", Onone, 70, "/", "/" },
{ "ceiling_div", Onone, 70, "/", "/" },
{ "sqrt", Onone, 90, "sqrt", "sqrt" },
{ "exp", Onone, 80, "**", "**" },
{ "min", Onone, 40, "min", "min" },
{ "max", Onone, 40, "max", "max" },
{ "mod", Onone, 60, "mod", "mod" },
{ "lt", Onone, 30, "<", ".lt." },
{ "le", Onone, 30, "<=", ".le." },
{ "eq", Onone, 30, "==", ".eq." },
{ "ne", Onone, 30, "<>", ".ne." },
{ "ge", Onone, 30, ">=", ".ge." },
{ "gt", Onone, 30, ">", ".gt." },
{ "not", Onone, 25, "not", ".not.",  },
{ "and", Onone, 20, "and", ".and." },
{ "or", Onone, 15, "or", ".or." },
{ "rtoi", Onone, 0, "nint", "RtoI" },
{ "phi", Onone, 0, "Phi", "Phi" },
{ "assign", Onone, 10, "=", "=" },
{ "add_assign", Onone, 10, "+=", "+=" },
{ "mul_assign", Onone, 10, "*=", "*=" },
{ "max_assign", Onone, 10, "max=", "max=" },
{ "min_assign", Onone, 10, "min=", "min=" },
{ "negate", Onone, 90, "-", "-" },
{ "stmt_number", Onone, 0, "S:", "" },
{ "comment", Osymbol, 0, "/*", "C" },
{ "assert", Onone, 0, "assert", "assert" },
{ "last", Onone, 0, "", "" },
{ "free", Onone, 0, "", "" }
